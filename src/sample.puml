@startuml

package Data{
    class Vehicle {
        - String plateNumber
        - String make
        - String model
        - int yearOfProduction
        - boolean isLeased
        + Vehicle()
        + Vehicle(String make, String model, int yearOfProduction)
        + String getPlateNumber()
        + String getMake()
        + String getModel()
        + int getYearOfProduction()
        + boolean isLeased()
        + void setPlateNumber(String plateNumber)
        + void setMake(String make)
        + void setModel(String model)
        + void setYearOfProduction(int yearOfProduction)
        + void setLeased(boolean leased)
        + String toString()
        + boolean equals(Object obj)
        + int editInformation(Scanner input)
    }


    class Car {
        - int maximumPassengers
        + Car()
        + Car(String make, String model, int yearOfProduction, int maximumPassengers)
        + int getMaximumPassengers()
        + void setMaximumPassengers(int maximumPassengers)
        + boolean equals(Object obj)
    }

    Vehicle <|-- Car

    class Truck {
        - double maximumWeightCapacity
        + Truck()
        + Truck(String make, String model, int yearOfProduction, double maximumWeightCapacity)
        + double getMaximumWeightCapacity()
        + void setMaximumWeightCapacity(double maximumWeightCapacity)
        + boolean equals(Object obj)
    }

    Vehicle <|-- Truck


    class DieselTruck {
        - double fuelCapacity
        - static int DieselTruckCount
        + DieselTruck()
        + DieselTruck(String make, String model, int yearOfProduction, double maximumWeightCapacity, double fuelCapacity)
        + DieselTruck(DieselTruck dieselTruck)
        + double getFuelCapacity()
        + void setFuelCapacity(double fuelCapacity)
        + String generatePlateNumber()
        + boolean equals(Object obj)
        + int editInformation(Scanner input)
    }

    Truck <|-- DieselTruck


    class ElectricTruck {
        - double maximumRange
        - static int ElectricTruckCount
        + ElectricTruck()
        + ElectricTruck(String make, String model, int yearOfProduction, double maximumWeightCapacity, double maximumRange)
        + ElectricTruck(ElectricTruck electricTruck)
        + double getMaximumRange()
        + void setMaximumRange(double maximumRange)
        + String generatePlateNumber()
        + boolean equals(Object obj)
        + int editInformation(Scanner input)
    }

    Truck <|-- ElectricTruck


    class GasolineCar {
        - int GasolineCarCount
        + GasolineCar()
        + GasolineCar(String make, String model, int yearOfProduction, int maximumPassengers)
        + GasolineCar(GasolineCar gasolineCar)
        + String generatePlateNumber()
        + boolean equals(Object obj)
        + int editInformation(Scanner input)
    }

    Car <|-- GasolineCar


    class ElectricCar {
        - double maximumRange
        - int ElectricCarCount
        + ElectricCar()
        + ElectricCar(String make, String model, int yearOfProduction, int maximumPassengers, double maximumRange)
        + ElectricCar(ElectricCar electricCar)
        + double getMaximumRange()
        + void setMaximumRange(double maximumRange)
        + String generatePlateNumber()
        + boolean equals(Object obj)
        + int editInformation(Scanner input)
    }

    Car <|-- ElectricCar
}

package Client{
    class Client {
        - String clientName
        - String[] clientVehicles
        - int clientID
        - int clientVehicleCount
        - static int clientCount
        + Client()
        + Client(String clientName)
        + Client(Client copiedClient)
        + String getClientName()
        + int getClientID()
        + int getClientVehicleCount()
        + String getClientVehicles(int index)
        + static int getClientCount()
        + void setClientName(String clientName)
        + String toString()
        + String clientVehiclesList(Vehicle[] vehicles, int vehicleCount)
        + void addVehicle(Vehicle vehicle)
        + void removeVehicle(int index)
        + void isLeasedByClient(Vehicle vehicle)
    }
}


package Driver {
    class Main {
        + static void getLargestTruck(Vehicle[] vehicles, int vehicleCount)
        + static ElectricTruck[] copyVehicles(Vehicle[] vehicles, int vehicleCount)
    }
}
Main --> Client : interacts
Main --> Vehicle : interacts

@enduml
